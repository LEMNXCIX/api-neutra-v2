# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env: 
      PORT: ${{ secrets.PORT }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
      FACEBOOK_APP_SECRET: ${{ secrets.FACEBOOK_APP_SECRET }}
      CALLBACK_URL_DEVELOPMENT: ${{ secrets.CALLBACK_URL_DEVELOPMENT }}

    runs-on: self-hosted
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Create env file
      run: |
       touch .env 
       echo  PORT =  ${{ secrets.PORT }} >> .env
       echo SESSION_SECRET =  ${{ secrets.SESSION_SECRET }} >> .env
       echo DB_NAME =  ${{ secrets.DB_NAME }} >> .env
       echo DB_HOST = ${{ secrets.DB_HOST }} >> .env
       echo DB_PASSWORD = ${{ secrets.DB_PASSWORD }} >> .env
       echo DB_USERNAME = ${{ secrets.DB_USERNAME }} >> .env
       echo JWT_SECRET = ${{ secrets.JWT_SECRET }} >> .env
       echo OAUTH_CLIENT_SECRET = ${{ secrets.OAUTH_CLIENT_SECRET }} >> .env
       echo OAUTH_CLIENT_ID = ${{ secrets.OAUTH_CLIENT_ID }} >> .env 
       echo FACEBOOK_APP_ID = ${{ secrets.FACEBOOK_APP_ID }} >> .env
       echo FACEBOOK_APP_SECRET =  ${{ secrets.FACEBOOK_APP_SECRET }} >> .env
       echo CALLBACK_URL_DEVELOPMENT =  ${{ secrets.CALLBACK_URL_DEVELOPMENT }} >> .env

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm start
    #- run: npm run build --if-present
   
